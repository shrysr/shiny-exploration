# Table of Contents
1.  [Init libraries](#orgc23cca8)
2.  [Run All init Library scripts](#orgcf04a12)
3.  [Importing data](#orgbcb2698)
4.  [Processing data](#orga086228)
1.  [Product details](#orgc70290e)
1.  [Cropped table](#orgb8a9f13)
2.  [Number of entries with Vendor Product code](#orgafc5ff1)
2.  [Vendor table](#org2cccda1)
<a id="orgc23cca8"></a>
# Init libraries
library(easypackages)
Listing packages and loading
mypackages <- c("tidyverse", "readxl", "skimr")
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<colgroup>
<col  class="org-left" />
</colgroup>
<tbody>
<tr>
<td class="org-left">tidyverse</td>
</tr>
<tr>
<td class="org-left">readxl</td>
</tr>
</tbody>
</table>
libraries(mypackages)
<a id="orgcf04a12"></a>
# Run All init Library scripts
library(easypackages)
mypackages <- c("tidyverse", "readxl", "skimr")
libraries(mypackages)
<a id="orgbcb2698"></a>
# Importing data
# Importing product details
product_details_raw_tbl <-  read_csv("/media/sf_bgr_inventory_host/inFlow_ProductDetails.csv")  %>%
glimpse()
#Importing the vendor details
vendor_details_raw_tbl <- read_csv("/media/sf_bgr_inventory_host/inFlow_Vendor.csv")  %>% glimpse()
<a id="orga086228"></a>
# Processing data
<a id="orgc70290e"></a>
## Product details
<a id="orgb8a9f13"></a>
### Cropped table
Dropping unnecessary columns
product_details_cropped_tbl <- product_details_raw_tbl  %>%
select(Name, Category, Description, ItemType, VendorProductCode, Cost)  %>%
glimpse()
<a id="orgafc5ff1"></a>
### Number of entries with Vendor Product code ----
product_details_cropped_tbl  %>%
count(is.na(VendorProductCode))
<a id="org2cccda1"></a>
## Vendor table
vendor_details_cropped_tbl <- vendor_details_raw_tbl  %>%
select
# Init libraries
library(easypackages)
Listing packages and loading
mypackages <- c("tidyverse", "readxl", "skimr")
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<colgroup>
<col  class="org-left" />
</colgroup>
<tbody>
<tr>
<td class="org-left">tidyverse</td>
</tr>
<tr>
<td class="org-left">readxl</td>
</tr>
</tbody>
</table>
libraries(mypackages)
# Run All init Library scripts
library(easypackages)
mypackages <- c("tidyverse", "readxl", "skimr")
libraries(mypackages)
# Importing data
# Importing product details
product_details_raw_tbl <-  read_csv("/media/sf_bgr_inventory_host/inFlow_ProductDetails.csv")  %>%
glimpse()
#Importing the vendor details
vendor_details_raw_tbl <- read_csv("/media/sf_bgr_inventory_host/inFlow_Vendor.csv")  %>% glimpse()
# Processing data
## Product details
### Cropped table
Dropping unnecessary columns
product_details_cropped_tbl <- product_details_raw_tbl  %>%
select(Name, Category, Description, ItemType, VendorProductCode, Cost)  %>%
glimpse()
### Number of entries with Vendor Product code
product_details_cropped_tbl  %>%
count(is.na(VendorProductCode))
## Vendor table
vendor_details_cropped_tbl <- vendor_details_raw_tbl  %>%
select
View(vendor_details_raw_tbl)
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
library(tidyverse)
stringr::words %>% str_view("[^aeiou]{3}",match = T)
stringr::words %>% str_view("(^aeiou){3}",match = T)
stringr::words %>% str_view("^[aeiou]{3}",match = T)
stringr::words %>% str_view("^[aeiou]",match = T)
stringr::words %>% str_view("^[eiou]",match = T)
shiny::runApp('my_projects/shiny-exploration/app-03')
runApp('my_projects/shiny-exploration/app-03')
## Define UI
ui  <- fluidPage(
titlePanel("Basic widget exploration"),
fluidRow(
column(2,
h3("buttons"),
actionButton("action", label ="Action"),
br(),
br(),
submitButton("Submit")
),
column(2,
h3("Single Checkbox"),
checkboxInput("checkbox", "Choice A", value = T)
),
column(2,
checkboxGroupInput("checkGroup",
h3("checkbox group"),
choices = list("Choice 1" = 1,
"Choice 2" = 2,
"Choice 3" = 3
),
selected = 1
)
)
)
)
library(shiny)
## Define UI
ui  <- fluidPage(
titlePanel("Basic widget exploration"),
fluidRow(
column(2,
h3("buttons"),
actionButton("action", label ="Action"),
br(),
br(),
submitButton("Submit")
),
column(2,
h3("Single Checkbox"),
checkboxInput("checkbox", "Choice A", value = T)
),
column(2,
checkboxGroupInput("checkGroup",
h3("checkbox group"),
choices = list("Choice 1" = 1,
"Choice 2" = 2,
"Choice 3" = 3
),
selected = 1
)
)
)
library(shiny)
## Define UI
ui  <- fluidPage(
titlePanel("Basic widget exploration"),
fluidRow(
column(2,
h3("buttons"),
actionButton("action", label ="Action"),
br(),
br(),
submitButton("Submit")
),
column(2,
h3("Single Checkbox"),
checkboxInput("checkbox", "Choice A", value = T)
),
column(2,
checkboxGroupInput("checkGroup",
h3("checkbox group"),
choices = list("Choice 1" = 1,
"Choice 2" = 2,
"Choice 3" = 3
),
selected = 1
)
)
)
library(shiny)
## Define UI
ui  <- fluidPage(
titlePanel("Basic widget exploration"),
fluidRow(
column(2,
h3("buttons"),
actionButton("action", label ="Action"),
br(),
br(),
submitButton("Submit")
),
column(2,
h3("Single Checkbox"),
checkboxInput("checkbox", "Choice A", value = T)
),
column(2,
checkboxGroupInput("checkGroup",
h3("checkbox group"),
choices = list("Choice 1" = 1,
"Choice 2" = 2,
"Choice 3" = 3
),
selected = 1
)
)
)
runApp('~/my_projects/shiny-exploration/app-04')
runApp('my_projects/shiny-exploration/app-04')
runApp('my_projects/shiny-exploration/app-04')
runApp('my_projects/shiny-exploration/app-04')
runApp('~/my_projects/shiny-exploration/census-app')
